# Linting workflow: https://github.com/rhysd/actionlint

name: CI

on:
  # https://docs.github.com/en/actions/using-workflows/events-that-trigger-workflows#push
  # Runs your workflow when you push a commit or tag.
  push:
    branches:
      - develop
      - main
      - preview
      - beta
      - devops/ci
      - fix/*
      - feat/*
    # https://docs.github.com/en/actions/using-workflows/events-that-trigger-workflows#running-your-workflow-only-when-a-push-affects-specific-files
    # https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions#onpushpull_requestpull_request_targetpathspaths-ignore
    paths:
      - src/**
      - tests/**
      -  .github/**
  pull_request:
    branches:
      - develop
      - main
      - preview
      - beta
    # https://docs.github.com/en/actions/using-workflows/events-that-trigger-workflows#running-your-workflow-only-when-a-push-affects-specific-files
    # https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions#onpushpull_requestpull_request_targetpathspaths-ignore
    paths:
      - src/**
      - tests/**
      - .github/**

  # https://docs.github.com/en/actions/using-workflows/events-that-trigger-workflows#workflow_dispatch
  # https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions#onworkflow_dispatchinputs
  # https://docs.github.com/en/actions/using-workflows/events-that-trigger-workflows#providing-inputs
  # https://docs.github.com/en/actions/managing-workflow-runs/manually-running-a-workflow
  # Allows us to run this workflow manually from the Actions tab
  # To manually trigger a workflow, use the workflow_dispatch event. You can manually trigger a workflow run using the GitHub API, GitHub CLI, or GitHub browser interface
  # Note: To trigger the workflow_dispatch event, our workflow must be in the default branch
  workflow_dispatch:
   inputs:
     logLevel:
       description: 'Log level'
       required: true
       default: 'warning'
       type: choice
       options:
         - info
         - warning
         - debug

# https://docs.github.com/en/actions/learn-github-actions/variables#defining-environment-variables-for-a-single-workflow
# we could also define env in scope a job or step
env:
 IS_PULL_REQUEST: ${{ github.event_name == 'pull_request' }}
 BRANCH_NAME: ${{ github.ref_name }}

# https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions#concurrency
concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.sha }}
  cancel-in-progress: true

# https://docs.github.com/en/actions/using-workflows/about-workflows
jobs:

  build-test:

    # https://itnext.io/automate-your-integration-tests-and-semantic-releases-with-github-actions-43875ad83092
    # Skipping workflow runs for some commits types
    if: (! contains(github.event.head_commit.message, '[skip ci]')) || (! contains(fromJson('["chore", "docs", "style"]'), github.event.head_commit.message))

    # https://docs.github.com/en/actions/using-jobs/assigning-permissions-to-jobs
    permissions:
      contents: write #  to be able to commit application version

    # https://docs.github.com/en/actions/using-workflows/reusing-workflows#calling-a-reusable-workflow
    # https://github.blog/2021-11-29-github-actions-reusable-workflows-is-generally-available/
    uses: ./.github/workflows/reusable-build-test.yml
    # https://docs.github.com/en/actions/using-workflows/reusing-workflows#passing-inputs-and-secrets-to-a-reusable-workflow
    # https://github.blog/changelog/2022-05-03-github-actions-simplify-using-secrets-with-reusable-workflows/
    # https://docs.github.com/en/actions/using-workflows/reusing-workflows#passing-secrets-to-nested-workflows
    # https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions#jobsjob_idsecretsinherit
    secrets: inherit
      #    with:
      #      environment_name: ${{ needs.build-test.outputs.environment_name }}
      #      environment_tag: ${{ needs.build-test.outputs.environment_tag }}



