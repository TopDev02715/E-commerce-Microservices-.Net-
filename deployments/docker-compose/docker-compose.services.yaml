# "buildkit": false && Docker-Compose v1
version: '3'
services:
  gateway:
    build:
      context: ../../
      dockerfile: src/ApiGateway/Dockerfile
    container_name: ecommerce-gateway
    # restart: unless-stopped
    ports:
      - ${GATEWAY_PORT}:80
    networks:
      - ecommerce

  catalogs:
    image: catalogs:${TAG}
    build:
      args:
        Version: "1"
      context: ../../
      dockerfile: src/Services/Catalogs/Dockerfile
    container_name: ecommerce-catalogs
    # restart: unless-stopped
    ports:
      - ${CATALOGS_SVC_PORT}:80
    env_file:
      - ../../.docker-envs/catalogs.env
    networks:
      - ecommerce

  identity:
    image: identity:${TAG}
    build:
      args:
        Version: "1"
      context: ../../
      dockerfile: src/Services/Identity/Dockerfile
    container_name: ecommerce-identity
    # restart: unless-stopped
    ports:
      - ${IDENTITY_SVC_PORT}:80
    depends_on:
      - postgres
      - rabbitmq
      - mongo
    links:
      - postgres
      - rabbitmq
      - mongo
    networks:
      - ecommerce

  customers:
    image: customers:${TAG}
    build:
      args:
        Version: "1"
      context: ../../
      dockerfile: src/Services/Customers/Dockerfile
    container_name: ecommerce-customers
    # restart: unless-stopped
    ports:
      - ${CUSTOMERS_SVC_PORT}:80
    depends_on:
      - postgres
      - rabbitmq
      - mongo
    links:
      - postgres
      - rabbitmq
      - mongo
    networks:
      - ecommerce

networks:
  ecommerce:
    name: ecommerce
    driver: bridge